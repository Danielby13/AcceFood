{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lihi9\\\\Software\\\\acc\\\\src\\\\component\\\\Mape.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport * as Data from '../data/data.json';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  const [selecteddata, setSelecteddata] = useState(null);\n  const [position, setposition] = useState({\n    lat: 31.41173,\n    lng: 35.08182,\n    zoom: 10\n  });\n  var x = document.getElementById('demo');\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      x.innerHTML = 'Geolocation is not supported by this browser.';\n    }\n  }\n\n  function showPosition(pos) {\n    setposition({\n      lat: pos.coords.latitude,\n      lng: pos.coords.longitude,\n      zoom: 18\n    });\n    console.log('lat=' + position.lat + ' lng=' + position.lng + ' zoom=' + position.zoom);\n  }\n\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    zoom: position.zoom,\n    center: {\n      lat: position.lat,\n      lng: position.lng\n    } //defaultOptions={{ styles: mapStyles }}\n    ,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      size: \"lg\",\n      style: {\n        marginLeft: '50%',\n        marginTop: '10px'\n      },\n      variant: \"primary\",\n      onClick: getLocation,\n      children: \"\\u05D0\\u05D9\\u05E4\\u05D4 \\u05D0\\u05E0\\u05D9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), Data.data.map(tad => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: tad.lat,\n        lng: tad.lng\n      },\n      icon: {\n        url: '/logo192.svg',\n        scaledSize: new window.google.maps.Size(25, 25)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"v8x7SYW356DjKkbaO7e+U9giOMU=\");\n\n_c = Map;\nconst MapWrapped = withScriptjs(_c2 = withGoogleMap(Map));\n_c3 = MapWrapped;\nexport default function MapP() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      float: 'left',\n      width: '50vw',\n      height: '90vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapWrapped, {\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBWpKFJPb9PgqqPtB3YZScgx0MBaMt-vZ0`,\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 27\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_c4 = MapP;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"MapWrapped$withScriptjs\");\n$RefreshReg$(_c3, \"MapWrapped\");\n$RefreshReg$(_c4, \"MapP\");","map":{"version":3,"sources":["C:/Users/lihi9/Software/acc/src/component/Mape.js"],"names":["React","useState","Button","Data","withScriptjs","withGoogleMap","GoogleMap","Marker","Map","selecteddata","setSelecteddata","position","setposition","lat","lng","zoom","x","document","getElementById","getLocation","navigator","geolocation","getCurrentPosition","showPosition","innerHTML","pos","coords","latitude","longitude","console","log","marginLeft","marginTop","data","map","tad","url","scaledSize","window","google","maps","Size","MapWrapped","MapP","float","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport * as Data from '../data/data.json';\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from 'react-google-maps';\r\n\r\nfunction Map() {\r\n  const [selecteddata, setSelecteddata] = useState(null);\r\n  const [position, setposition] = useState({\r\n    lat: 31.41173,\r\n    lng: 35.08182,\r\n    zoom: 10,\r\n  });\r\n  var x = document.getElementById('demo');\r\n\r\n  function getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(showPosition);\r\n    } else {\r\n      x.innerHTML = 'Geolocation is not supported by this browser.';\r\n    }\r\n  }\r\n\r\n  function showPosition(pos) {\r\n    setposition({\r\n      lat: pos.coords.latitude,\r\n      lng: pos.coords.longitude,\r\n      zoom: 18,\r\n    });\r\n    console.log(\r\n      'lat=' + position.lat + ' lng=' + position.lng + ' zoom=' + position.zoom\r\n    );\r\n  }\r\n\r\n  return (\r\n  \r\n        <GoogleMap\r\n          zoom={position.zoom}\r\n          center={{ lat: position.lat, lng: position.lng }}\r\n          //defaultOptions={{ styles: mapStyles }}\r\n        >\r\n      \r\n      \r\n        <Button\r\n          size=\"lg\"\r\n          style={{ marginLeft: '50%', marginTop: '10px' }}\r\n          variant=\"primary\"\r\n          onClick={getLocation}\r\n        >\r\n          איפה אני\r\n        </Button>\r\n        {Data.data.map((tad) => (\r\n          <Marker\r\n            position={{\r\n              lat: tad.lat,\r\n              lng: tad.lng,\r\n            }}\r\n            icon={{\r\n              url: '/logo192.svg',\r\n              scaledSize: new window.google.maps.Size(25, 25),\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        </GoogleMap>\r\n      \r\n      \r\n  \r\n    \r\n  );\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\nexport default function MapP() {\r\n  return (\r\n    <div style={{ float: 'left', width: '50vw', height: '90vh' }}>\r\n      <MapWrapped\r\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBWpKFJPb9PgqqPtB3YZScgx0MBaMt-vZ0`}\r\n        loadingElement={<div style={{ height: `100` }} />}\r\n        containerElement={<div style={{ height: `100%` }} />}\r\n        mapElement={<div style={{ height: `100%` }} />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}