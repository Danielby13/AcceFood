{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lihi9\\\\Software\\\\acc\\\\src\\\\component\\\\Mape.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  const [selectedPark, setSelectedPark] = useState(null);\n  const [position, setposition] = useState({\n    lat: 31.41173,\n    lng: 35.08182,\n    zoom: 10\n  });\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      x.innerHTML = 'Geolocation is not supported by this browser.';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    zoom: position.zoom,\n    center: {\n      lat: position.lat,\n      lng: position.lng\n    } //defaultOptions={{ styles: mapStyles }}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Map, \"uD1fQhDULwAuFWtdNcLCZRqGcuE=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/lihi9/Software/acc/src/component/Mape.js"],"names":["React","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","Map","selectedPark","setSelectedPark","useState","position","setposition","lat","lng","zoom","getLocation","navigator","geolocation","getCurrentPosition","showPosition","x","innerHTML"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,mBAA/D;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC;AACvCG,IAAAA,GAAG,EAAE,QADkC;AAEvCC,IAAAA,GAAG,EAAE,QAFkC;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CAAxC;;AAMA,WAASC,WAAT,GAAuB;AACrB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACD,KAFD,MAEO;AACLC,MAAAA,CAAC,CAACC,SAAF,GAAc,+CAAd;AACD;AACF;;AAEH,sBACE,QAAC,SAAD;AACA,IAAA,IAAI,EAAEX,QAAQ,CAACI,IADf;AAEA,IAAA,MAAM,EAAE;AAAEF,MAAAA,GAAG,EAAEF,QAAQ,CAACE,GAAhB;AAAqBC,MAAAA,GAAG,EAAEH,QAAQ,CAACG;AAAnC,KAFR,CAGA;;AAHA;AAAA;AAAA;AAAA;AAAA,UADF;AASC;;GAzBQP,G;;KAAAA,G","sourcesContent":["import React from \"react\"\r\nimport { compose, withProps } from \"recompose\"\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\r\n\r\nfunction Map() {\r\n  const [selectedPark, setSelectedPark] = useState(null);\r\n  const [position, setposition] = useState({\r\n    lat: 31.41173,\r\n    lng: 35.08182,\r\n    zoom: 10,\r\n  });\r\n\r\n  function getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(showPosition);\r\n    } else {\r\n      x.innerHTML = 'Geolocation is not supported by this browser.';\r\n    }\r\n  }\r\n\r\nreturn(\r\n  <GoogleMap\r\n  zoom={position.zoom}\r\n  center={{ lat: position.lat, lng: position.lng }}\r\n  //defaultOptions={{ styles: mapStyles }}\r\n></GoogleMap>\r\n)\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}