{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lihi9\\\\Software\\\\acc\\\\src\\\\component\\\\Mape.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { compose, withProps } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  const [position, setposition] = useState({\n    lat: 31.41173,\n    lng: 35.08182,\n    zoom: 10\n  });\n  var x = document.getElementById('demo');\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      x.innerHTML = 'Geolocation is not supported by this browser.';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    zoom: position.zoom,\n    center: {\n      lat: position.lat,\n      lng: position.lng\n    } //defaultOptions={{ styles: mapStyles }}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"SqstWBuGSo9Zr5qFymxYypsQelU=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/lihi9/Software/acc/src/component/Mape.js"],"names":["React","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","Map","position","setposition","useState","lat","lng","zoom","x","document","getElementById","getLocation","navigator","geolocation","getCurrentPosition","showPosition","innerHTML"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC;AACvCC,IAAAA,GAAG,EAAE,QADkC;AAEvCC,IAAAA,GAAG,EAAE,QAFkC;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CAAxC;AAKA,MAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAR;;AAEA,WAASC,WAAT,GAAuB;AACrB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACD,KAFD,MAEO;AACLP,MAAAA,CAAC,CAACQ,SAAF,GAAc,+CAAd;AACD;AACF;;AAED,sBACE,QAAC,SAAD;AACE,IAAA,IAAI,EAAEd,QAAQ,CAACK,IADjB;AAEE,IAAA,MAAM,EAAE;AAAEF,MAAAA,GAAG,EAAEH,QAAQ,CAACG,GAAhB;AAAqBC,MAAAA,GAAG,EAAEJ,QAAQ,CAACI;AAAnC,KAFV,CAGE;;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvBQL,G;;KAAAA,G","sourcesContent":["import React from 'react';\r\nimport { compose, withProps } from 'recompose';\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from 'react-google-maps';\r\n\r\nfunction Map() {\r\n  const [position, setposition] = useState({\r\n    lat: 31.41173,\r\n    lng: 35.08182,\r\n    zoom: 10,\r\n  });\r\n  var x = document.getElementById('demo');\r\n  \r\n  function getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(showPosition);\r\n    } else {\r\n      x.innerHTML = 'Geolocation is not supported by this browser.';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GoogleMap\r\n      zoom={position.zoom}\r\n      center={{ lat: position.lat, lng: position.lng }}\r\n      //defaultOptions={{ styles: mapStyles }}\r\n    ></GoogleMap>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}